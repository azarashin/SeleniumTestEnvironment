@startuml

frame Repository {
    folder {
    [TestBuildTree]
    }
}
Repository -- RepositoryPort

package TestTarget {
    node TestNodeJSContainer {
        [NodeJSApp] -- NodeJSAppPort
    }
}
WebAppPort .. NodeJSAppPort

frame TestEnvironment {

    package Selenium {
        node ChromeContainer {
            [ChromeService] -- ChromeControlPort
            [ChromeService] -- ChromeBrowserPort
            [ChromeService] -> WebAppPort : get, post, put, delete
        }

        node FirefoxContainer {
            [FirefoxService] -- FirefoxControlPort
            [FirefoxService] -- FirefoxBrowserPort
            [FirefoxService] -> WebAppPort : get, post, put, delete
        }

        node OperaContainer {
            [OperaService] -- OperaControlPort
            [OperaService] -- OperaBrowserPort
            [OperaService] -> WebAppPort : get, post, put, delete
        }
    }
    CeleniumControlPort .. ChromeControlPort
    CeleniumControlPort .. FirefoxControlPort
    CeleniumControlPort .. OperaControlPort

    CeleniumBrowserPort .. ChromeBrowserPort
    CeleniumBrowserPort .. FirefoxBrowserPort
    CeleniumBrowserPort .. OperaBrowserPort


    package Tester {

        node TesterCSContainer {
            [TesterCSApp] -- TesterCSWebPort
        }

        node TesterPythonContainer {
            [TesterPythonApp] -- TesterPythonWebPort
        }
    }
    TesterWebPort .. TesterCSWebPort
    TesterWebPort .. TesterPythonWebPort
    Tester -> CeleniumControlPort : test comand
    Tester -> RepositoryPort : clone test tree

    Selenium .up. Tester

    package CI {
        node JenkinsContainer {
            [JenkinsService] -- JenkinsPort
            [JenkinsService] -> TesterWebPort : build
        }
    }

    Tester .up. CI
}


node ClientComputer {
    [UserBrowser] -> WebAppPort : use application
    [DeveloperBrowser] -> WebAppPort : check application
    [DeveloperBrowser] -> CeleniumBrowserPort : check test condition
    [DeveloperBrowser] -> JenkinsPort : check test condition
}

@enduml
